/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/classes": {
    get: operations["ClassesController_getClasses"];
  };
  "/classes/{classId}": {
    get: operations["ClassesController_getClass"];
  };
  "/subjects": {
    get: operations["SubjectsController_getSubjects"];
  };
  "/lessons/{classId}": {
    get: operations["LessonsController_getLessonsForClass"];
  };
  "/lessons/{classId}/ics": {
    get: operations["LessonsController_getICSForClass"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    GetClassDto: {
      /** @description The class's identification number. */
      id: number;
      /** @description The class's short name. */
      name: string;
      /** @description The class's longer, more descriptive, name. */
      longName: string;
      /** @description The class's department identification number. */
      did: number;
      /** @description Optional forced foreground color representing the class. */
      foreColor?: string;
      /** @description Optional forced background color representing the class. */
      backColor?: string;
    };
    GetSubjectDto: {
      /** @description The subject's identification number. */
      id: number;
      /** @description The subject's short name. */
      name: string;
      /** @description The subject's longer, more descriptive, name. */
      longName: string;
      /** @description The subject's current state. */
      active: boolean;
      /** @description The subject's optional alternative name. */
      alternateName?: string;
      /** @description Optional forced foreground color representing the subject. */
      foreColor?: string;
      /** @description Optional forced background color representing the subject. */
      backColor?: string;
    };
    Metadata: {
      /** @description The metadata's identification number. */
      id: number;
      /** @description The metadata's name value. */
      name: string;
      /** @description The metadata's long name value. */
      longname: string;
    };
    GetLessonDto: {
      /** @description The lesson's identification number. */
      id: number;
      /**
       * Format: date-time
       * @description The lesson's set date. Use this in combination with *startTime* and *endTime*.
       */
      date: string;
      /** @description The lesson's starting time in WebUntis formatting. */
      startTime: number;
      /** @description The lesson's ending time in WebUntis formatting. */
      endTime: number;
      /** @description The lesson's attending classes. */
      kl: components["schemas"]["Metadata"][];
      /** @description The lesson's teachers. */
      te: components["schemas"]["Metadata"][];
      /** @description The lesson's subjects. */
      su: components["schemas"]["Metadata"][];
      /** @description The lesson's rooms. */
      ro: components["schemas"]["Metadata"][];
      /** @description The lesson's optional meta text. */
      lstext?: string;
      /** @description The lesson's shared identification number. Used for repeating classes. */
      lsnumber: number;
      /** @description The lesson's type. */
      activityType?: string;
      /** @description The lesson's state. */
      code?: string;
      /** @description The lesson's optional information. */
      info?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  ClassesController_getClasses: {
    responses: {
      /** @description The classes of the (currently latest) schoolyear are returned. */
      200: {
        content: {
          "application/json": components["schemas"]["GetClassDto"][];
        };
      };
    };
  };
  ClassesController_getClass: {
    parameters: {
      path: {
        classId: number;
      };
    };
    responses: {
      /** @description The requested class is returned. */
      200: {
        content: {
          "application/json": components["schemas"]["GetClassDto"];
        };
      };
      /** @description The requested class was not found. */
      404: {
        content: never;
      };
    };
  };
  SubjectsController_getSubjects: {
    responses: {
      /** @description The (visible) subjects are returned. */
      200: {
        content: {
          "application/json": components["schemas"]["GetSubjectDto"][];
        };
      };
    };
  };
  LessonsController_getLessonsForClass: {
    parameters: {
      path: {
        classId: number;
      };
    };
    responses: {
      /** @description The requested lessons of the target class are returned. */
      200: {
        content: {
          "application/json": components["schemas"]["GetLessonDto"][];
        };
      };
      /** @description There were no lessons found with the given class id. */
      404: {
        content: never;
      };
    };
  };
  LessonsController_getICSForClass: {
    parameters: {
      query?: {
        includedSubjects?: number[];
        excludedSubjects?: number[];
        alarms?: number[];
      };
      path: {
        classId: number;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
}
